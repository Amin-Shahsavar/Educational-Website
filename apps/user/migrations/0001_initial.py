# Generated by Django 4.2.9 on 2024-02-17 18:42

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.validators.username_validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('plan', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, error_messages={'unique': 'کاربری با این نام کاربری وجود دارد.'}, help_text='Required. 128 characters or fewer. Letters, digits and ./+/-/_ only.', max_length=128, null=True, unique=True, validators=[utils.validators.username_validator.UsernameValidator()], verbose_name='username')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='password')),
                ('first_name', models.CharField(max_length=128, verbose_name='first name')),
                ('last_name', models.CharField(max_length=128, verbose_name='last name')),
                ('phone_number', models.CharField(blank=True, help_text='Phone number with country code', max_length=20, null=True, unique=True, verbose_name='phone number')),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'کاربری با این ایمیل وجود دارد.'}, help_text='Required for users outside of iran', max_length=265, null=True, unique=True, verbose_name='email')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='./user/avatar/', verbose_name='avatar')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verify status')),
                ('region', models.CharField(blank=True, choices=[('INSIDE', 'INSIDE'), ('OUTSIDE', 'OUTSIDE')], null=True, verbose_name='region')),
                ('plan_purchase_date', models.DateTimeField(blank=True, null=True, verbose_name='plan purchase date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='plan.plan', verbose_name='plan')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
